{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeoboya\\\\git2\\\\router_practice\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { Fragment } from \"react\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Root from \"./pages/Root\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/Event\";\nimport NewEventPage, { action as newEventAction } from \"./pages/NewEvent\";\nimport EventDetailPage, { loader as eventDetailLoader } from \"./pages/EventDetail\";\nimport EditEventPage from \"./pages/EditEvent\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: 'events',\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: 'new',\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }, this),\n        action: newEventAction\n      }, {\n        path: ':eventId',\n        id: 'event-detail',\n        loader: eventDetailLoader,\n        children: [{\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }, this)\n        }, {\n          path: 'edit',\n          element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 42\n          }, this)\n        }]\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","createBrowserRouter","RouterProvider","Root","HomePage","EventsPage","loader","eventsLoader","NewEventPage","action","newEventAction","EventDetailPage","eventDetailLoader","EditEventPage","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","_c","$RefreshReg$"],"sources":["C:/Users/yeoboya/git2/router_practice/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\r\n\r\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\r\n//    - HomePage\r\n//    - EventsPage\r\n//    - EventDetailPage\r\n//    - NewEventPage\r\n//    - EditEventPage\r\n// 2. Add routing & route definitions for these five pages\r\n//    - / => HomePage\r\n//    - /events => EventsPage\r\n//    - /events/<some-id> => EventDetailPage\r\n//    - /events/new => NewEventPage\r\n//    - /events/<some-id>/edit => EditEventPage\r\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\r\n// 4. Add properly working links to the MainNavigation\r\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\r\n// 6. Output a list of dummy events to the EventsPage\r\n//    Every list item should include a link to the respective EventDetailPage\r\n// 7. Output the ID of the selected event on the EventDetailPage\r\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\r\n\r\nimport {Fragment} from \"react\";\r\nimport {createBrowserRouter, RouterProvider} from \"react-router-dom\";\r\nimport Root from \"./pages/Root\";\r\nimport HomePage from \"./pages/Home\";\r\nimport EventsPage, {loader as eventsLoader} from \"./pages/Event\";\r\nimport NewEventPage, {action as newEventAction} from \"./pages/NewEvent\";\r\nimport EventDetailPage, {loader as eventDetailLoader} from \"./pages/EventDetail\";\r\nimport EditEventPage from \"./pages/EditEvent\";\r\nimport EventsRootLayout from \"./pages/EventsRoot\";\r\nimport ErrorPage from \"./pages/Error\";\r\n\r\nfunction App() {\r\n  const router = createBrowserRouter([\r\n    {\r\n      path: '/',\r\n      element: <Root />,\r\n      errorElement: <ErrorPage />,\r\n      children: [\r\n        { index: true, element: <HomePage /> },\r\n        {\r\n          path: 'events',\r\n          element: <EventsRootLayout />,\r\n          children: [\r\n            { index: true, element: <EventsPage />, loader: eventsLoader\r\n            },\r\n            { path: 'new', element: <NewEventPage />, action: newEventAction},\r\n            {\r\n              path: ':eventId',\r\n              id: 'event-detail',\r\n              loader: eventDetailLoader,\r\n              children: [\r\n                { index: true, element: <EventDetailPage /> },\r\n                { path: 'edit', element: <EditEventPage /> }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <Fragment>\r\n      <RouterProvider router={router} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,IAAGC,MAAM,IAAIC,YAAY,QAAO,eAAe;AAChE,OAAOC,YAAY,IAAGC,MAAM,IAAIC,cAAc,QAAO,kBAAkB;AACvE,OAAOC,eAAe,IAAGL,MAAM,IAAIM,iBAAiB,QAAO,qBAAqB;AAChF,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGlB,mBAAmB,CAAC,CACjC;IACEmB,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACd,IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IACjBC,YAAY,eAAET,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IAC3BE,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAAEP,OAAO,eAAEJ,OAAA,CAACb,QAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI,CAAC,EACtC;MACEL,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAEJ,OAAA,CAACH,gBAAgB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;MAC7BE,QAAQ,EAAE,CACR;QAAEC,KAAK,EAAE,IAAI;QAAEP,OAAO,eAAEJ,OAAA,CAACZ,UAAU;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;QAAEnB,MAAM,EAAEC;MAChD,CAAC,EACD;QAAEa,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACT,YAAY;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;QAAEhB,MAAM,EAAEC;MAAc,CAAC,EACjE;QACEU,IAAI,EAAE,UAAU;QAChBS,EAAE,EAAE,cAAc;QAClBvB,MAAM,EAAEM,iBAAiB;QACzBe,QAAQ,EAAE,CACR;UAAEC,KAAK,EAAE,IAAI;UAAEP,OAAO,eAAEJ,OAAA,CAACN,eAAe;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI,CAAC,EAC7C;UAAEL,IAAI,EAAE,MAAM;UAAEC,OAAO,eAAEJ,OAAA,CAACJ,aAAa;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI,CAAC;MAEhD,CAAC;IAEL,CAAC;EAEL,CAAC,CACF,CAAC;EAEF,oBACER,OAAA,CAACjB,QAAQ;IAAA2B,QAAA,eACPV,OAAA,CAACf,cAAc;MAACiB,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzB;AAEf;AAACK,EAAA,GAnCQZ,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}